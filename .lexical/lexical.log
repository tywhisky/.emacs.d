12:28:45.125 [info] Child {LoggerFileBackend, :general_log} of Supervisor Logger.Backends.Supervisor started
Pid: #PID<0.114.0>
Start Call: Logger.Backends.Watcher.start_link({{LoggerFileBackend, :general_log}, {LoggerFileBackend, :general_log}})
Restart: :transient
Shutdown: 5000
Type: :worker
12:28:45.125 [info] Child Logger.Backends.Supervisor of Supervisor Logger.Backends.Internal started
Pid: #PID<0.113.0>
Start Call: Logger.Backends.Supervisor.start_link([{LoggerFileBackend, :general_log}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
12:28:45.125 [info] Child Logger.Backends.Internal of Supervisor Logger.Supervisor started
Pid: #PID<0.109.0>
Start Call: Logger.Backends.Internal.start_link([])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
12:28:45.125 [info] Application logger started at :nonode@nohost
12:28:48.200 [info] Child :ttb_autostart of Supervisor :runtime_tools_sup started
Pid: #PID<0.120.0>
Start Call: :ttb_autostart.start_link()
Restart: :temporary
Shutdown: 3000
Type: :worker
12:28:48.200 [info] Application runtime_tools started at :nonode@nohost
12:28:48.204 [info] Application erts started at :nonode@nohost
12:28:48.204 [info] Application lx_lexical_shared started at :nonode@nohost
12:28:48.204 [info] Application lx_lexical_test started at :nonode@nohost
12:28:48.206 [info] Child LXSnowflake.Generator of Supervisor #PID<0.127.0> (Supervisor.Default) started
Pid: #PID<0.128.0>
Start Call: LXSnowflake.Generator.start_link(1704070800000, 1)
Restart: :permanent
Shutdown: 5000
Type: :worker
12:28:48.206 [info] Application lx_snowflake started at :nonode@nohost
12:28:48.206 [info] Application lx_sourceror started at :nonode@nohost
12:28:48.206 [info] Application lx_common started at :nonode@nohost
12:28:48.206 [info] Application lx_elixir_sense started at :nonode@nohost
12:28:48.216 [info] Application jason started at :nonode@nohost
12:28:48.216 [info] Application logger_file_backend started at :nonode@nohost
12:28:48.216 [info] Application lx_path_glob started at :nonode@nohost
12:28:48.216 [info] Application lx_proto started at :nonode@nohost
12:28:48.216 [info] Application lx_protocol started at :nonode@nohost
12:28:48.241 [info] Child LXical.Document.Store of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.141.0>
Start Call: LXical.Document.Store.start_link([derive: [analysis: &LXical.Ast.analyze/1]])
Restart: :permanent
Shutdown: 5000
Type: :worker
12:28:48.246 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.142.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
12:28:48.246 [info] Child LXical.Server.ProjectSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.143.0>
Start Call: DynamicSupervisor.start_link([name: LXical.Server.ProjectSupervisor, strategy: :one_for_one])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
12:28:48.246 [info] Child LXical.Server.TaskQueue.State.TaskSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.144.0>
Start Call: Task.Supervisor.start_link([name: LXical.Server.TaskQueue.State.TaskSupervisor])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
12:28:48.246 [info] Child LXical.Server.TaskQueue of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.145.0>
Start Call: LXical.Server.TaskQueue.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
12:28:48.246 [info] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.146.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
12:28:48.246 [info] Application lx_server started at :nonode@nohost
12:28:48.269 [info] Starting project at uri file:///root/repos/leetcode/solution.exs
12:28:48.300 [info] Child {LXical.Server.Project.Progress, "solution_exs"} of Supervisor :"solution_exs::supervisor" started
Pid: #PID<0.148.0>
Start Call: LXical.Server.Project.Progress.start_link(%LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 24026})
Restart: :permanent
Shutdown: 5000
Type: :worker
12:28:48.306 [info] Child {LXical.RemoteControl.ProjectNodeSupervisor, "solution_exs"} of Supervisor :"solution_exs::supervisor" started
Pid: #PID<0.149.0>
Start Call: LXical.RemoteControl.ProjectNodeSupervisor.start_link(%LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 24026})
Restart: :permanent
Shutdown: 5000
Type: :worker
12:28:48.328 [info] Child :erl_epmd of Supervisor :net_sup started
Pid: #PID<0.152.0>
Start Call: :erl_epmd.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
12:28:48.330 [info] Child :auth of Supervisor :net_sup started
Pid: #PID<0.153.0>
Start Call: :auth.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
12:28:48.347 [info] Child :net_kernel of Supervisor :net_sup started
Pid: #PID<0.154.0>
Start Call: :net_kernel.start_link(%{clean_halt: false, name: :"manager-solution_exs-24026@127.0.0.1", name_domain: :longnames, supervisor: :net_sup_dynamic})
Restart: :permanent
Shutdown: 2000
Type: :worker
12:28:48.347 [info] Child :net_sup_dynamic of Supervisor :kernel_sup started
Pid: #PID<0.151.0>
Start Call: :erl_distribution.start_link(%{clean_halt: false, name: :"manager-solution_exs-24026@127.0.0.1", name_domain: :longnames, supervisor: :net_sup_dynamic})
Restart: :permanent
Shutdown: 1000
Type: :supervisor
12:28:48.429 [error] GenServer :"solution_exs::node_process" terminating
** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
    (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
    (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
    (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
    (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
    (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
Last message (from :"solution_exs::node"): {:start, [~c"/root/.config/emacs/language-server/elixir/release/priv", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_common.ez/lx_common/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_elixir_sense.ez/lx_elixir_sense/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_plugin.ez/lx_lexical_plugin/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_shared.ez/lx_lexical_shared/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_test.ez/lx_lexical_test/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_path_glob.ez/lx_path_glob/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_remote_control.ez/lx_remote_control/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_snowflake.ez/lx_snowflake/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_sourceror.ez/lx_sourceror/ebin"]}
State: %LXical.RemoteControl.ProjectNode.State{project: %LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 24026}, port: nil, cookie: :lexical, stopped_by: nil, stop_timeout: nil, started_by: nil, status: :initializing}
Client :"solution_exs::node" is alive

    (stdlib 4.3) gen.erl:256: :gen.do_call/4
    (elixir 1.17.1) lib/gen_server.ex:1125: GenServer.call/3
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:116: LXical.RemoteControl.ProjectNode.start/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:72: LXical.RemoteControl.start_link/1
    (lx_server 0.5.0) lib/lexical/server/project/node.ex:94: LXical.Server.Project.Node.start_node/1
    (lx_server 0.5.0) lib/lexical/server/project/progress/support.ex:18: LXical.Server.Project.Progress.Support.with_progress/3
    (lx_server 0.5.0) lib/lexical/server/project/node.ex:52: LXical.Server.Project.Node.init/1
    (stdlib 4.3) gen_server.erl:851: :gen_server.init_it/2
12:28:48.433 [error] Process :"solution_exs::node_process" (#PID<0.157.0>) terminating
** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
    (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
    (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
    (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
    (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
    (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
Initial Call: LXical.RemoteControl.ProjectNode.init/1
Ancestors: [LXical.RemoteControl.ProjectNodeSupervisor, :"solution_exs::supervisor", LXical.Server.ProjectSupervisor, LXical.Server.Supervisor, #PID<0.139.0>]
Message Queue Length: 1
Messages: [{:EXIT, #Port<0.9>, :normal}]
Links: [#PID<0.149.0>]
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 80909
12:28:48.435 [error] Process #PID<0.150.0> terminating
** (exit) exited in: GenServer.call(:"solution_exs::node_process", {:start, [~c"/root/.config/emacs/language-server/elixir/release/priv", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_common.ez/lx_common/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_elixir_sense.ez/lx_elixir_sense/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_plugin.ez/lx_lexical_plugin/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_shared.ez/lx_lexical_shared/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_test.ez/lx_lexical_test/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_path_glob.ez/lx_path_glob/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_remote_control.ez/lx_remote_control/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_snowflake.ez/lx_snowflake/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_sourceror.ez/lx_sourceror/ebin"]}, 3500)
    ** (EXIT) an exception was raised:
        ** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
            (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
            (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
            (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
            (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
            (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
            (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
            (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
            (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
    (elixir 1.17.1) lib/gen_server.ex:1128: GenServer.call/3
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:116: LXical.RemoteControl.ProjectNode.start/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:72: LXical.RemoteControl.start_link/1
    (lx_server 0.5.0) lib/lexical/server/project/node.ex:94: LXical.Server.Project.Node.start_node/1
    (lx_server 0.5.0) lib/lexical/server/project/progress/support.ex:18: LXical.Server.Project.Progress.Support.with_progress/3
    (lx_server 0.5.0) lib/lexical/server/project/node.ex:52: LXical.Server.Project.Node.init/1
    (stdlib 4.3) gen_server.erl:851: :gen_server.init_it/2
    (stdlib 4.3) gen_server.erl:814: :gen_server.init_it/6
Initial Call: LXical.Server.Project.Node.init/1
Ancestors: [:"solution_exs::supervisor", LXical.Server.ProjectSupervisor, LXical.Server.Supervisor, #PID<0.139.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.147.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 235456
12:28:48.435 [error] Child :undefined of Supervisor LXical.RemoteControl.ProjectNodeSupervisor terminated
** (exit) an exception was raised:
    ** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
        (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
        (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
        (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
        (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
        (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
        (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
        (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
        (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
Pid: #PID<0.157.0>
Start Call: LXical.RemoteControl.ProjectNode.start_link(%LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 24026})
Restart: :transient
Shutdown: 5000
Type: :worker
12:28:48.435 [error] Child {LXical.Server.Project.Node, "solution_exs"} of Supervisor :"solution_exs::supervisor" failed to start
** (exit) exited in: GenServer.call(:"solution_exs::node_process", {:start, [~c"/root/.config/emacs/language-server/elixir/release/priv", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_common.ez/lx_common/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_elixir_sense.ez/lx_elixir_sense/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_plugin.ez/lx_lexical_plugin/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_shared.ez/lx_lexical_shared/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_test.ez/lx_lexical_test/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_path_glob.ez/lx_path_glob/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_remote_control.ez/lx_remote_control/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_snowflake.ez/lx_snowflake/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_sourceror.ez/lx_sourceror/ebin"]}, 3500)
    ** (EXIT) an exception was raised:
        ** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
            (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
            (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
            (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
            (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
            (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
            (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
            (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
            (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
Start Call: LXical.Server.Project.Node.start_link(%LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 24026})
Restart: :permanent
Shutdown: 5000
Type: :worker
12:28:48.437 [info] Lexical Initialized
12:28:48.440 [info] opened file:///root/repos/leetcode/solution.exs
12:28:49.740 [info] Child of Supervisor :inet_gethost_native_sup started
Pid: #PID<0.160.0>
Start Call: :inet_gethost_native.init([])
12:28:49.740 [info] Child :inet_gethost_native_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.159.0>
Start Call: :inet_gethost_native.start_link()
Restart: :temporary
Shutdown: 1000
Type: :worker
12:28:49.742 [error] GenServer LXical.Server terminating
** (stop) {:erpc, :noconnection}
    (kernel 8.5.4) erpc.erl:710: :erpc.call/5
    (lx_server 0.5.0) lib/lexical/server/state.ex:164: LXical.Server.State.apply/2
    (lx_server 0.5.0) lib/lexical/server.ex:154: LXical.Server.apply_to_state/2
    (lx_server 0.5.0) lib/lexical/server.ex:117: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
    (stdlib 4.3) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Last message: {:"$gen_cast", {:protocol_message, %LXical.Protocol.Notifications.DidChange{lsp: %LXical.Protocol.Notifications.DidChange.LSP{jsonrpc: "2.0", method: "textDocument/didChange", content_changes: [#Protocol.Types.TextDocument.ContentChangeEvent.TextDocumentContentChangeEvent<[range: #Protocol.Types.Range<[end: #Protocol.Types.Position<[character: 0, line: 2]>, start: #Protocol.Types.Position<[character: 0, line: 2]>]>, range_length: 0, text: "E"]>], text_document: #Protocol.Types.TextDocument.Versioned.Identifier<[uri: "file:///root/repos/leetcode/solution.exs", version: 1]>}, document: nil, jsonrpc: "2.0", method: "textDocument/didChange", content_changes: nil, text_document: nil}}}
State: %LXical.Server.State{configuration: %LXical.Server.Configuration{project: %LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 24026}, support: %LXical.Server.Configuration.Support{code_action_dynamic_registration: false, hierarchical_symbols: false, snippet: true, deprecated: true, tags: #Protocol.Types.Completion.ClientCapabilities.TagSupport<[value_set: [:deprecated]]>, signature_help: false, work_done_progress: true}, client_name: "emacs", additional_watched_extensions: nil, dialyzer_enabled?: false}, initialized?: true, shutdown_received?: false, in_flight_requests: %{}}
12:28:49.754 [error] Process LXical.Server (#PID<0.142.0>) terminating
** (ErlangError) Erlang error: {:erpc, :noconnection}
    (kernel 8.5.4) erpc.erl:710: :erpc.call/5
    (lx_server 0.5.0) lib/lexical/server/state.ex:164: LXical.Server.State.apply/2
    (lx_server 0.5.0) lib/lexical/server.ex:154: LXical.Server.apply_to_state/2
    (lx_server 0.5.0) lib/lexical/server.ex:117: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
    (stdlib 4.3) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Initial Call: LXical.Server.init/1
Ancestors: [LXical.Server.Supervisor, #PID<0.139.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.140.0>]
Dictionary: [rand_seed: {%{bits: 58, jump: #Function<3.34006561/1 in :rand.exsplus_jump>, next: #Function<0.34006561/1 in :rand.exsss_next>, type: :exsss, uniform: #Function<1.34006561/1 in :rand.exsss_uniform>, uniform_n: #Function<2.34006561/2 in :rand.exsss_uniform>}, [36911663072050510 | 57170654001697665]}]
Trapping Exits: false
Status: :running
Heap Size: 4185
Stack Size: 28
Reductions: 23586
12:28:49.755 [error] Child LXical.Server of Supervisor LXical.Server.Supervisor terminated
** (exit) an exception was raised:
    ** (ErlangError) Erlang error: {:erpc, :noconnection}
        (kernel 8.5.4) erpc.erl:710: :erpc.call/5
        (lx_server 0.5.0) lib/lexical/server/state.ex:164: LXical.Server.State.apply/2
        (lx_server 0.5.0) lib/lexical/server.ex:154: LXical.Server.apply_to_state/2
        (lx_server 0.5.0) lib/lexical/server.ex:117: LXical.Server.handle_message/2
        (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
        (stdlib 4.3) gen_server.erl:1123: :gen_server.try_dispatch/4
        (stdlib 4.3) gen_server.erl:1200: :gen_server.handle_msg/6
        (stdlib 4.3) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Pid: #PID<0.142.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
12:28:49.755 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.163.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
12:28:49.842 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 10110, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 1, line: 2]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<3, 2>>, id: 10110, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:50.446 [error] Received textDocument/didChange before server was initialized
12:28:50.446 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:50.446 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:50.549 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 8658, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 0, line: 2]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<3, 1>>, id: 8658, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:51.304 [error] Received textDocument/didChange before server was initialized
12:28:51.304 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:51.304 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:51.327 [error] Received textDocument/didChange before server was initialized
12:28:51.328 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:51.328 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:51.430 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 64812, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 4, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 5>>, id: 64812, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:51.657 [error] Received textDocument/didChange before server was initialized
12:28:51.660 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:51.660 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:51.754 [error] Received textDocument/didChange before server was initialized
12:28:51.756 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:51.756 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:51.857 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 14597, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 4, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 5>>, id: 14597, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:52.236 [error] Received textDocument/didChange before server was initialized
12:28:52.237 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:52.237 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:52.339 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 33600, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 5, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 33600, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:52.406 [error] Received textDocument/didChange before server was initialized
12:28:52.407 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:52.407 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:52.508 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 9694, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 6, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 9694, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:52.621 [error] Received textDocument/didChange before server was initialized
12:28:52.623 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:52.623 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:52.723 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 28941, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_character: ".", trigger_kind: :trigger_character]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 7, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 28941, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_character: ".", trigger_kind: :trigger_character]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:52.900 [error] Received textDocument/didChange before server was initialized
12:28:52.902 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:52.902 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:53.002 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 31367, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 8, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 31367, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:53.566 [error] Received textDocument/didChange before server was initialized
12:28:53.567 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:53.567 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:53.668 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 47698, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 9, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 47698, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:53.671 [error] Received textDocument/didChange before server was initialized
12:28:53.673 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:53.673 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:53.772 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 6955, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 10, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 6955, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:53.893 [error] Received textDocument/didChange before server was initialized
12:28:53.894 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:53.894 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:53.992 [error] Received textDocument/didChange before server was initialized
12:28:53.993 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:53.993 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:54.093 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 38216, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 12, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 38216, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:54.146 [error] Received textDocument/didChange before server was initialized
12:28:54.148 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:54.148 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:54.250 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 34499, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 13, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 34499, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:54.309 [error] Received textDocument/didChange before server was initialized
12:28:54.311 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:54.311 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:54.413 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 55359, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 14, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 55359, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:54.523 [error] Received textDocument/didChange before server was initialized
12:28:54.526 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:54.526 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:54.627 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 62667, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 15, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 62667, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:54.944 [error] Received textDocument/didChange before server was initialized
12:28:54.946 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:54.946 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:55.046 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 10499, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 16, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 10499, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:55.173 [error] Received textDocument/didChange before server was initialized
12:28:55.175 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:55.175 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:55.234 [error] Received textDocument/didChange before server was initialized
12:28:55.236 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:55.236 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:55.338 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 49486, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 18, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 49486, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:55.342 [error] Received textDocument/didChange before server was initialized
12:28:55.344 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:55.344 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:55.386 [error] Received textDocument/didChange before server was initialized
12:28:55.388 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:55.388 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:55.489 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 40135, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 20, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 40135, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:55.526 [error] Received textDocument/didChange before server was initialized
12:28:55.528 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:55.528 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:55.535 [error] Received textDocument/didChange before server was initialized
12:28:55.536 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:55.536 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:55.639 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 43928, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 22, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 43928, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:55.807 [error] Received textDocument/didChange before server was initialized
12:28:55.809 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:55.809 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:55.911 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 10248, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 23, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 10248, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:56.407 [error] Received textDocument/didChange before server was initialized
12:28:56.409 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:56.409 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
12:28:56.511 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 6826, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 24, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(7 lines)>, ...>, position: LxPos<<4, 6>>, id: 6826, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

12:28:57.634 [error] Received textDocument/didSave before server was initialized
12:28:57.635 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidSave, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
12:28:57.635 [error] Could not handle message LXical.Protocol.Notifications.DidSave :ok
13:08:58.559 [info] Child {LoggerFileBackend, :general_log} of Supervisor Logger.Backends.Supervisor started
Pid: #PID<0.114.0>
Start Call: Logger.Backends.Watcher.start_link({{LoggerFileBackend, :general_log}, {LoggerFileBackend, :general_log}})
Restart: :transient
Shutdown: 5000
Type: :worker
13:08:58.559 [info] Child Logger.Backends.Supervisor of Supervisor Logger.Backends.Internal started
Pid: #PID<0.113.0>
Start Call: Logger.Backends.Supervisor.start_link([{LoggerFileBackend, :general_log}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
13:08:58.559 [info] Child Logger.Backends.Internal of Supervisor Logger.Supervisor started
Pid: #PID<0.109.0>
Start Call: Logger.Backends.Internal.start_link([])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
13:08:58.559 [info] Application logger started at :nonode@nohost
13:09:01.558 [info] Child :ttb_autostart of Supervisor :runtime_tools_sup started
Pid: #PID<0.120.0>
Start Call: :ttb_autostart.start_link()
Restart: :temporary
Shutdown: 3000
Type: :worker
13:09:01.559 [info] Application runtime_tools started at :nonode@nohost
13:09:01.562 [info] Application erts started at :nonode@nohost
13:09:01.562 [info] Application lx_lexical_shared started at :nonode@nohost
13:09:01.562 [info] Application lx_lexical_test started at :nonode@nohost
13:09:01.564 [info] Child LXSnowflake.Generator of Supervisor #PID<0.127.0> (Supervisor.Default) started
Pid: #PID<0.128.0>
Start Call: LXSnowflake.Generator.start_link(1704070800000, 1)
Restart: :permanent
Shutdown: 5000
Type: :worker
13:09:01.565 [info] Application lx_snowflake started at :nonode@nohost
13:09:01.565 [info] Application lx_sourceror started at :nonode@nohost
13:09:01.565 [info] Application lx_common started at :nonode@nohost
13:09:01.565 [info] Application lx_elixir_sense started at :nonode@nohost
13:09:01.574 [info] Application jason started at :nonode@nohost
13:09:01.574 [info] Application logger_file_backend started at :nonode@nohost
13:09:01.574 [info] Application lx_path_glob started at :nonode@nohost
13:09:01.574 [info] Application lx_proto started at :nonode@nohost
13:09:01.574 [info] Application lx_protocol started at :nonode@nohost
13:09:01.598 [info] Child LXical.Document.Store of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.141.0>
Start Call: LXical.Document.Store.start_link([derive: [analysis: &LXical.Ast.analyze/1]])
Restart: :permanent
Shutdown: 5000
Type: :worker
13:09:01.603 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.142.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
13:09:01.603 [info] Child LXical.Server.ProjectSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.143.0>
Start Call: DynamicSupervisor.start_link([name: LXical.Server.ProjectSupervisor, strategy: :one_for_one])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
13:09:01.603 [info] Child LXical.Server.TaskQueue.State.TaskSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.144.0>
Start Call: Task.Supervisor.start_link([name: LXical.Server.TaskQueue.State.TaskSupervisor])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
13:09:01.603 [info] Child LXical.Server.TaskQueue of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.145.0>
Start Call: LXical.Server.TaskQueue.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
13:09:01.603 [info] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.146.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
13:09:01.604 [info] Application lx_server started at :nonode@nohost
13:09:01.631 [info] Starting project at uri file:///root/repos/leetcode/solution.exs
13:09:01.669 [info] Child {LXical.Server.Project.Progress, "solution_exs"} of Supervisor :"solution_exs::supervisor" started
Pid: #PID<0.148.0>
Start Call: LXical.Server.Project.Progress.start_link(%LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 5911})
Restart: :permanent
Shutdown: 5000
Type: :worker
13:09:01.679 [info] Child {LXical.RemoteControl.ProjectNodeSupervisor, "solution_exs"} of Supervisor :"solution_exs::supervisor" started
Pid: #PID<0.149.0>
Start Call: LXical.RemoteControl.ProjectNodeSupervisor.start_link(%LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 5911})
Restart: :permanent
Shutdown: 5000
Type: :worker
13:09:01.703 [info] Child :erl_epmd of Supervisor :net_sup started
Pid: #PID<0.152.0>
Start Call: :erl_epmd.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
13:09:01.706 [info] Child :auth of Supervisor :net_sup started
Pid: #PID<0.153.0>
Start Call: :auth.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
13:09:01.723 [info] Child :net_kernel of Supervisor :net_sup started
Pid: #PID<0.154.0>
Start Call: :net_kernel.start_link(%{clean_halt: false, name: :"manager-solution_exs-5911@127.0.0.1", name_domain: :longnames, supervisor: :net_sup_dynamic})
Restart: :permanent
Shutdown: 2000
Type: :worker
13:09:01.723 [info] Child :net_sup_dynamic of Supervisor :kernel_sup started
Pid: #PID<0.151.0>
Start Call: :erl_distribution.start_link(%{clean_halt: false, name: :"manager-solution_exs-5911@127.0.0.1", name_domain: :longnames, supervisor: :net_sup_dynamic})
Restart: :permanent
Shutdown: 1000
Type: :supervisor
13:09:01.800 [error] GenServer :"solution_exs::node_process" terminating
** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
    (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
    (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
    (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
    (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
    (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
Last message (from :"solution_exs::node"): {:start, [~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/priv", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_common.ez/lx_common/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_elixir_sense.ez/lx_elixir_sense/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_lexical_plugin.ez/lx_lexical_plugin/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_lexical_shared.ez/lx_lexical_shared/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_lexical_test.ez/lx_lexical_test/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_path_glob.ez/lx_path_glob/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_remote_control.ez/lx_remote_control/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_snowflake.ez/lx_snowflake/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_sourceror.ez/lx_sourceror/ebin"]}
State: %LXical.RemoteControl.ProjectNode.State{project: %LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 5911}, port: nil, cookie: :lexical, stopped_by: nil, stop_timeout: nil, started_by: nil, status: :initializing}
Client :"solution_exs::node" is alive

    (stdlib 4.3) gen.erl:256: :gen.do_call/4
    (elixir 1.17.1) lib/gen_server.ex:1125: GenServer.call/3
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:116: LXical.RemoteControl.ProjectNode.start/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:72: LXical.RemoteControl.start_link/1
    (lx_server 0.5.0) lib/lexical/server/project/node.ex:94: LXical.Server.Project.Node.start_node/1
    (lx_server 0.5.0) lib/lexical/server/project/progress/support.ex:18: LXical.Server.Project.Progress.Support.with_progress/3
    (lx_server 0.5.0) lib/lexical/server/project/node.ex:52: LXical.Server.Project.Node.init/1
    (stdlib 4.3) gen_server.erl:851: :gen_server.init_it/2
13:09:01.805 [error] Process :"solution_exs::node_process" (#PID<0.157.0>) terminating
** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
    (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
    (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
    (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
    (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
    (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
Initial Call: LXical.RemoteControl.ProjectNode.init/1
Ancestors: [LXical.RemoteControl.ProjectNodeSupervisor, :"solution_exs::supervisor", LXical.Server.ProjectSupervisor, LXical.Server.Supervisor, #PID<0.139.0>]
Message Queue Length: 1
Messages: [{:EXIT, #Port<0.9>, :normal}]
Links: [#PID<0.149.0>]
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 17731
Stack Size: 28
Reductions: 85165
13:09:01.807 [error] Process #PID<0.150.0> terminating
** (exit) exited in: GenServer.call(:"solution_exs::node_process", {:start, [~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/priv", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_common.ez/lx_common/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_elixir_sense.ez/lx_elixir_sense/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_lexical_plugin.ez/lx_lexical_plugin/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_lexical_shared.ez/lx_lexical_shared/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_lexical_test.ez/lx_lexical_test/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_path_glob.ez/lx_path_glob/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_remote_control.ez/lx_remote_control/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_snowflake.ez/lx_snowflake/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_sourceror.ez/lx_sourceror/ebin"]}, 3500)
    ** (EXIT) an exception was raised:
        ** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
            (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
            (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
            (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
            (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
            (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
            (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
            (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
            (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
    (elixir 1.17.1) lib/gen_server.ex:1128: GenServer.call/3
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:116: LXical.RemoteControl.ProjectNode.start/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:72: LXical.RemoteControl.start_link/1
    (lx_server 0.5.0) lib/lexical/server/project/node.ex:94: LXical.Server.Project.Node.start_node/1
    (lx_server 0.5.0) lib/lexical/server/project/progress/support.ex:18: LXical.Server.Project.Progress.Support.with_progress/3
    (lx_server 0.5.0) lib/lexical/server/project/node.ex:52: LXical.Server.Project.Node.init/1
    (stdlib 4.3) gen_server.erl:851: :gen_server.init_it/2
    (stdlib 4.3) gen_server.erl:814: :gen_server.init_it/6
Initial Call: LXical.Server.Project.Node.init/1
Ancestors: [:"solution_exs::supervisor", LXical.Server.ProjectSupervisor, LXical.Server.Supervisor, #PID<0.139.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.147.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 2586
Stack Size: 28
Reductions: 236405
13:09:01.807 [error] Child :undefined of Supervisor LXical.RemoteControl.ProjectNodeSupervisor terminated
** (exit) an exception was raised:
    ** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
        (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
        (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
        (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
        (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
        (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
        (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
        (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
        (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
Pid: #PID<0.157.0>
Start Call: LXical.RemoteControl.ProjectNode.start_link(%LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 5911})
Restart: :transient
Shutdown: 5000
Type: :worker
13:09:01.807 [error] Child {LXical.Server.Project.Node, "solution_exs"} of Supervisor :"solution_exs::supervisor" failed to start
** (exit) exited in: GenServer.call(:"solution_exs::node_process", {:start, [~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/priv", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_common.ez/lx_common/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_elixir_sense.ez/lx_elixir_sense/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_lexical_plugin.ez/lx_lexical_plugin/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_lexical_shared.ez/lx_lexical_shared/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_lexical_test.ez/lx_lexical_test/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_path_glob.ez/lx_path_glob/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_remote_control.ez/lx_remote_control/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_snowflake.ez/lx_snowflake/ebin", ~c"/root/.config/emacs/language-server/elixir/_build/dev/package/lexical/lib/lx_sourceror.ez/lx_sourceror/ebin"]}, 3500)
    ** (EXIT) an exception was raised:
        ** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
            (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
            (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
            (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
            (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
            (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
            (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
            (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
            (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
Start Call: LXical.Server.Project.Node.start_link(%LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 5911})
Restart: :permanent
Shutdown: 5000
Type: :worker
13:09:01.809 [info] Lexical Initialized
13:09:01.814 [info] opened file:///root/repos/leetcode/solution.exs
13:09:01.821 [info] Child of Supervisor :inet_gethost_native_sup started
Pid: #PID<0.160.0>
Start Call: :inet_gethost_native.init([])
13:09:01.821 [info] Child :inet_gethost_native_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.159.0>
Start Call: :inet_gethost_native.start_link()
Restart: :temporary
Shutdown: 1000
Type: :worker
13:09:01.823 [error] GenServer LXical.Server terminating
** (stop) {:erpc, :noconnection}
    (kernel 8.5.4) erpc.erl:710: :erpc.call/5
    (lx_server 0.5.0) lib/lexical/server/state.ex:164: LXical.Server.State.apply/2
    (lx_server 0.5.0) lib/lexical/server.ex:154: LXical.Server.apply_to_state/2
    (lx_server 0.5.0) lib/lexical/server.ex:117: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
    (stdlib 4.3) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Last message: {:"$gen_cast", {:protocol_message, %LXical.Protocol.Notifications.DidChange{lsp: %LXical.Protocol.Notifications.DidChange.LSP{jsonrpc: "2.0", method: "textDocument/didChange", content_changes: [#Protocol.Types.TextDocument.ContentChangeEvent.TextDocumentContentChangeEvent<[range: #Protocol.Types.Range<[end: #Protocol.Types.Position<[character: 10, line: 4]>, start: #Protocol.Types.Position<[character: 0, line: 4]>]>, range_length: 10, text: ""]>], text_document: #Protocol.Types.TextDocument.Versioned.Identifier<[uri: "file:///root/repos/leetcode/solution.exs", version: 1]>}, document: nil, jsonrpc: "2.0", method: "textDocument/didChange", content_changes: nil, text_document: nil}}}
State: %LXical.Server.State{configuration: %LXical.Server.Configuration{project: %LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 5911}, support: %LXical.Server.Configuration.Support{code_action_dynamic_registration: false, hierarchical_symbols: false, snippet: true, deprecated: true, tags: #Protocol.Types.Completion.ClientCapabilities.TagSupport<[value_set: [:deprecated]]>, signature_help: false, work_done_progress: true}, client_name: "emacs", additional_watched_extensions: nil, dialyzer_enabled?: false}, initialized?: true, shutdown_received?: false, in_flight_requests: %{}}
13:09:01.836 [error] Process LXical.Server (#PID<0.142.0>) terminating
** (ErlangError) Erlang error: {:erpc, :noconnection}
    (kernel 8.5.4) erpc.erl:710: :erpc.call/5
    (lx_server 0.5.0) lib/lexical/server/state.ex:164: LXical.Server.State.apply/2
    (lx_server 0.5.0) lib/lexical/server.ex:154: LXical.Server.apply_to_state/2
    (lx_server 0.5.0) lib/lexical/server.ex:117: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
    (stdlib 4.3) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Initial Call: LXical.Server.init/1
Ancestors: [LXical.Server.Supervisor, #PID<0.139.0>]
Message Queue Length: 1
Messages: ["$gen_cast": {:protocol_message, %LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 57595, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 0, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: nil, position: nil, id: 57595, jsonrpc: "2.0", method: "textDocument/completion", context: nil, partial_result_token: nil, text_document: nil, work_done_token: nil}}]
Links: [#PID<0.140.0>]
Dictionary: [rand_seed: {%{bits: 58, jump: #Function<3.34006561/1 in :rand.exsplus_jump>, next: #Function<0.34006561/1 in :rand.exsss_next>, type: :exsss, uniform: #Function<1.34006561/1 in :rand.exsss_uniform>, uniform_n: #Function<2.34006561/2 in :rand.exsss_uniform>}, [161522800440095267 | 212523814001046067]}]
Trapping Exits: false
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 23557
13:09:01.840 [error] Child LXical.Server of Supervisor LXical.Server.Supervisor terminated
** (exit) an exception was raised:
    ** (ErlangError) Erlang error: {:erpc, :noconnection}
        (kernel 8.5.4) erpc.erl:710: :erpc.call/5
        (lx_server 0.5.0) lib/lexical/server/state.ex:164: LXical.Server.State.apply/2
        (lx_server 0.5.0) lib/lexical/server.ex:154: LXical.Server.apply_to_state/2
        (lx_server 0.5.0) lib/lexical/server.ex:117: LXical.Server.handle_message/2
        (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
        (stdlib 4.3) gen_server.erl:1123: :gen_server.try_dispatch/4
        (stdlib 4.3) gen_server.erl:1200: :gen_server.handle_msg/6
        (stdlib 4.3) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Pid: #PID<0.142.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
13:09:01.840 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.163.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
13:09:02.655 [error] Received textDocument/didChange before server was initialized
13:09:02.656 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:02.656 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:02.764 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 15890, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 1, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 15890, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:02.882 [error] Received textDocument/didChange before server was initialized
13:09:02.882 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:02.882 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:02.883 [error] Received textDocument/didChange before server was initialized
13:09:02.884 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:02.884 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:02.985 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 2653, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 7, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 2653, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:03.198 [error] Received textDocument/didChange before server was initialized
13:09:03.200 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:03.200 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:03.301 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 58940, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 6, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 58940, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:03.472 [error] Received textDocument/didChange before server was initialized
13:09:03.475 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:03.475 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:03.576 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 63646, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 5, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 63646, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:03.873 [error] Received textDocument/didChange before server was initialized
13:09:03.875 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:03.875 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:03.897 [error] Received textDocument/didChange before server was initialized
13:09:03.899 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:03.899 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:04.001 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 44351, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 3, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 44351, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:04.035 [error] Received textDocument/didChange before server was initialized
13:09:04.037 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:04.037 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:04.139 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 52253, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 2, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 52253, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:04.211 [error] Received textDocument/didChange before server was initialized
13:09:04.213 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:04.213 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:04.315 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 50715, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 1, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 50715, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:04.380 [error] Received textDocument/didChange before server was initialized
13:09:04.382 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:04.382 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:04.484 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 3012, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 0, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 3012, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:04.591 [error] Received textDocument/didChange before server was initialized
13:09:04.593 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:04.593 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:04.696 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 1789, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 4, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 1789, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:05.088 [error] Received textDocument/didChange before server was initialized
13:09:05.091 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:05.091 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:05.192 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 21425, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 5, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 21425, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:05.268 [error] Received textDocument/didChange before server was initialized
13:09:05.270 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:05.270 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:05.372 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 59222, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 6, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 59222, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:05.557 [error] Received textDocument/didChange before server was initialized
13:09:05.559 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:05.559 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:05.661 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 21633, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_character: ".", trigger_kind: :trigger_character]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 7, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 21633, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_character: ".", trigger_kind: :trigger_character]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:05.837 [error] Received textDocument/didChange before server was initialized
13:09:05.839 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:05.839 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:05.942 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 19827, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 8, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 19827, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:06.005 [error] Received textDocument/didChange before server was initialized
13:09:06.007 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:06.007 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:06.076 [error] Received textDocument/didChange before server was initialized
13:09:06.077 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:06.077 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:06.182 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 13357, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 10, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 13357, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:06.186 [error] Received textDocument/didChange before server was initialized
13:09:06.188 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:06.188 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:06.259 [error] Received textDocument/didChange before server was initialized
13:09:06.262 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:06.262 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:06.363 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 14087, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 12, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 14087, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:06.419 [error] Received textDocument/didChange before server was initialized
13:09:06.421 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:06.421 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:06.523 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 41590, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 13, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 41590, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:06.578 [error] Received textDocument/didChange before server was initialized
13:09:06.580 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:06.580 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:06.682 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 63091, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 14, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 63091, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:06.881 [error] Received textDocument/didChange before server was initialized
13:09:06.883 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:06.883 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:06.986 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 63311, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 13, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 63311, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:07.281 [error] Received textDocument/didChange before server was initialized
13:09:07.283 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:07.283 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:07.306 [error] Received textDocument/didChange before server was initialized
13:09:07.308 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:07.308 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:07.331 [error] Received textDocument/didChange before server was initialized
13:09:07.333 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:07.333 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:07.357 [error] Received textDocument/didChange before server was initialized
13:09:07.360 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:07.360 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:07.382 [error] Received textDocument/didChange before server was initialized
13:09:07.384 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:07.384 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:07.408 [error] Received textDocument/didChange before server was initialized
13:09:07.410 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:07.410 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:07.433 [error] Received textDocument/didChange before server was initialized
13:09:07.434 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:07.434 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:07.536 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 39144, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 6, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 39144, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:07.553 [error] Received textDocument/didChange before server was initialized
13:09:07.555 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:07.555 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:07.659 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 3944, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 5, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 3944, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:07.725 [error] Received textDocument/didChange before server was initialized
13:09:07.727 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:07.727 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:07.829 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 42808, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 4, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 42808, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:07.917 [error] Received textDocument/didChange before server was initialized
13:09:07.919 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:07.919 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:08.022 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 18583, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 5, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 18583, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:08.025 [error] Received textDocument/didChange before server was initialized
13:09:08.027 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:08.027 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:08.132 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 41708, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 6, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 41708, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:08.205 [error] Received textDocument/didChange before server was initialized
13:09:08.208 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:08.208 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:08.311 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 30845, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 7, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 30845, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:08.361 [error] Received textDocument/didChange before server was initialized
13:09:08.363 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:08.363 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:08.466 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 43819, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 8, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 43819, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:08.572 [error] Received textDocument/didChange before server was initialized
13:09:08.574 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:08.574 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:08.676 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 21501, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_character: ".", trigger_kind: :trigger_character]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 9, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 21501, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_character: ".", trigger_kind: :trigger_character]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:09.903 [error] Received textDocument/didSave before server was initialized
13:09:09.905 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidSave, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:09.905 [error] Could not handle message LXical.Protocol.Notifications.DidSave :ok
13:09:14.555 [error] Received textDocument/didChange before server was initialized
13:09:14.557 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:14.557 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:14.661 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 64996, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 10, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 64996, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:15.291 [error] Received textDocument/didChange before server was initialized
13:09:15.294 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:15.294 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:15.397 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 54333, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_character: ".", trigger_kind: :trigger_character]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 9, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 54333, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_character: ".", trigger_kind: :trigger_character]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

13:09:16.330 [error] Received textDocument/didChange before server was initialized
13:09:16.333 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
13:09:16.333 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
13:09:16.434 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 583, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 10, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(9 lines)>, ...>, position: LxPos<<5, 1>>, id: 583, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

