00:33:14.585 [info] Child {LoggerFileBackend, :general_log} of Supervisor Logger.Backends.Supervisor started
Pid: #PID<0.114.0>
Start Call: Logger.Backends.Watcher.start_link({{LoggerFileBackend, :general_log}, {LoggerFileBackend, :general_log}})
Restart: :transient
Shutdown: 5000
Type: :worker
00:33:14.585 [info] Child Logger.Backends.Supervisor of Supervisor Logger.Backends.Internal started
Pid: #PID<0.113.0>
Start Call: Logger.Backends.Supervisor.start_link([{LoggerFileBackend, :general_log}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
00:33:14.585 [info] Child Logger.Backends.Internal of Supervisor Logger.Supervisor started
Pid: #PID<0.109.0>
Start Call: Logger.Backends.Internal.start_link([])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
00:33:14.585 [info] Application logger started at :nonode@nohost
00:33:18.132 [info] Child :ttb_autostart of Supervisor :runtime_tools_sup started
Pid: #PID<0.120.0>
Start Call: :ttb_autostart.start_link()
Restart: :temporary
Shutdown: 3000
Type: :worker
00:33:18.132 [info] Application runtime_tools started at :nonode@nohost
00:33:18.135 [info] Application erts started at :nonode@nohost
00:33:18.136 [info] Application lx_lexical_shared started at :nonode@nohost
00:33:18.136 [info] Application lx_lexical_test started at :nonode@nohost
00:33:18.138 [info] Child LXSnowflake.Generator of Supervisor #PID<0.127.0> (Supervisor.Default) started
Pid: #PID<0.128.0>
Start Call: LXSnowflake.Generator.start_link(1704070800000, 1)
Restart: :permanent
Shutdown: 5000
Type: :worker
00:33:18.138 [info] Application lx_snowflake started at :nonode@nohost
00:33:18.138 [info] Application lx_sourceror started at :nonode@nohost
00:33:18.138 [info] Application lx_common started at :nonode@nohost
00:33:18.138 [info] Application lx_elixir_sense started at :nonode@nohost
00:33:18.148 [info] Application jason started at :nonode@nohost
00:33:18.148 [info] Application logger_file_backend started at :nonode@nohost
00:33:18.148 [info] Application lx_path_glob started at :nonode@nohost
00:33:18.148 [info] Application lx_proto started at :nonode@nohost
00:33:18.148 [info] Application lx_protocol started at :nonode@nohost
00:33:18.175 [info] Child LXical.Document.Store of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.141.0>
Start Call: LXical.Document.Store.start_link([derive: [analysis: &LXical.Ast.analyze/1]])
Restart: :permanent
Shutdown: 5000
Type: :worker
00:33:18.180 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.142.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
00:33:18.180 [info] Child LXical.Server.ProjectSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.143.0>
Start Call: DynamicSupervisor.start_link([name: LXical.Server.ProjectSupervisor, strategy: :one_for_one])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
00:33:18.180 [info] Child LXical.Server.TaskQueue.State.TaskSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.144.0>
Start Call: Task.Supervisor.start_link([name: LXical.Server.TaskQueue.State.TaskSupervisor])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
00:33:18.180 [info] Child LXical.Server.TaskQueue of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.145.0>
Start Call: LXical.Server.TaskQueue.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
00:33:18.180 [info] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.146.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
00:33:18.180 [info] Application lx_server started at :nonode@nohost
00:33:18.203 [info] Starting project at uri file:///root/repos/leetcode/solution.exs
00:33:18.237 [info] Child {LXical.Server.Project.Progress, "solution_exs"} of Supervisor :"solution_exs::supervisor" started
Pid: #PID<0.148.0>
Start Call: LXical.Server.Project.Progress.start_link(%LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 52582})
Restart: :permanent
Shutdown: 5000
Type: :worker
00:33:18.243 [info] Child {LXical.RemoteControl.ProjectNodeSupervisor, "solution_exs"} of Supervisor :"solution_exs::supervisor" started
Pid: #PID<0.149.0>
Start Call: LXical.RemoteControl.ProjectNodeSupervisor.start_link(%LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 52582})
Restart: :permanent
Shutdown: 5000
Type: :worker
00:33:18.264 [info] Child :erl_epmd of Supervisor :net_sup started
Pid: #PID<0.152.0>
Start Call: :erl_epmd.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
00:33:18.266 [info] Child :auth of Supervisor :net_sup started
Pid: #PID<0.153.0>
Start Call: :auth.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
00:33:18.281 [info] Child :net_kernel of Supervisor :net_sup started
Pid: #PID<0.154.0>
Start Call: :net_kernel.start_link(%{clean_halt: false, name: :"manager-solution_exs-52582@127.0.0.1", name_domain: :longnames, supervisor: :net_sup_dynamic})
Restart: :permanent
Shutdown: 2000
Type: :worker
00:33:18.282 [info] Child :net_sup_dynamic of Supervisor :kernel_sup started
Pid: #PID<0.151.0>
Start Call: :erl_distribution.start_link(%{clean_halt: false, name: :"manager-solution_exs-52582@127.0.0.1", name_domain: :longnames, supervisor: :net_sup_dynamic})
Restart: :permanent
Shutdown: 1000
Type: :supervisor
00:33:18.387 [error] GenServer :"solution_exs::node_process" terminating
** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
    (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
    (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
    (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
    (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
    (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
Last message (from :"solution_exs::node"): {:start, [~c"/root/.config/emacs/language-server/elixir/release/priv", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_common.ez/lx_common/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_elixir_sense.ez/lx_elixir_sense/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_plugin.ez/lx_lexical_plugin/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_shared.ez/lx_lexical_shared/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_test.ez/lx_lexical_test/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_path_glob.ez/lx_path_glob/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_remote_control.ez/lx_remote_control/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_snowflake.ez/lx_snowflake/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_sourceror.ez/lx_sourceror/ebin"]}
State: %LXical.RemoteControl.ProjectNode.State{project: %LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 52582}, port: nil, cookie: :lexical, stopped_by: nil, stop_timeout: nil, started_by: nil, status: :initializing}
Client :"solution_exs::node" is alive

    (stdlib 4.3) gen.erl:256: :gen.do_call/4
    (elixir 1.17.1) lib/gen_server.ex:1125: GenServer.call/3
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:116: LXical.RemoteControl.ProjectNode.start/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:72: LXical.RemoteControl.start_link/1
    (lx_server 0.5.0) lib/lexical/server/project/node.ex:94: LXical.Server.Project.Node.start_node/1
    (lx_server 0.5.0) lib/lexical/server/project/progress/support.ex:18: LXical.Server.Project.Progress.Support.with_progress/3
    (lx_server 0.5.0) lib/lexical/server/project/node.ex:52: LXical.Server.Project.Node.init/1
    (stdlib 4.3) gen_server.erl:851: :gen_server.init_it/2
00:33:18.391 [error] Process :"solution_exs::node_process" (#PID<0.157.0>) terminating
** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
    (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
    (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
    (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
    (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
    (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
Initial Call: LXical.RemoteControl.ProjectNode.init/1
Ancestors: [LXical.RemoteControl.ProjectNodeSupervisor, :"solution_exs::supervisor", LXical.Server.ProjectSupervisor, LXical.Server.Supervisor, #PID<0.139.0>]
Message Queue Length: 1
Messages: [{:EXIT, #Port<0.9>, :normal}]
Links: [#PID<0.149.0>]
Dictionary: []
Trapping Exits: true
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 80810
00:33:18.394 [error] Process #PID<0.150.0> terminating
** (exit) exited in: GenServer.call(:"solution_exs::node_process", {:start, [~c"/root/.config/emacs/language-server/elixir/release/priv", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_common.ez/lx_common/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_elixir_sense.ez/lx_elixir_sense/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_plugin.ez/lx_lexical_plugin/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_shared.ez/lx_lexical_shared/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_test.ez/lx_lexical_test/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_path_glob.ez/lx_path_glob/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_remote_control.ez/lx_remote_control/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_snowflake.ez/lx_snowflake/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_sourceror.ez/lx_sourceror/ebin"]}, 3500)
    ** (EXIT) an exception was raised:
        ** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
            (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
            (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
            (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
            (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
            (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
            (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
            (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
            (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
    (elixir 1.17.1) lib/gen_server.ex:1128: GenServer.call/3
    (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:116: LXical.RemoteControl.ProjectNode.start/2
    (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:72: LXical.RemoteControl.start_link/1
    (lx_server 0.5.0) lib/lexical/server/project/node.ex:94: LXical.Server.Project.Node.start_node/1
    (lx_server 0.5.0) lib/lexical/server/project/progress/support.ex:18: LXical.Server.Project.Progress.Support.with_progress/3
    (lx_server 0.5.0) lib/lexical/server/project/node.ex:52: LXical.Server.Project.Node.init/1
    (stdlib 4.3) gen_server.erl:851: :gen_server.init_it/2
    (stdlib 4.3) gen_server.erl:814: :gen_server.init_it/6
Initial Call: LXical.Server.Project.Node.init/1
Ancestors: [:"solution_exs::supervisor", LXical.Server.ProjectSupervisor, LXical.Server.Supervisor, #PID<0.139.0>]
Message Queue Length: 0
Messages: []
Links: [#PID<0.147.0>]
Dictionary: []
Trapping Exits: false
Status: :running
Heap Size: 6772
Stack Size: 28
Reductions: 235471
00:33:18.393 [error] Child :undefined of Supervisor LXical.RemoteControl.ProjectNodeSupervisor terminated
** (exit) an exception was raised:
    ** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
        (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
        (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
        (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
        (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
        (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
        (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
        (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
        (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
Pid: #PID<0.157.0>
Start Call: LXical.RemoteControl.ProjectNode.start_link(%LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 52582})
Restart: :transient
Shutdown: 5000
Type: :worker
00:33:18.393 [error] Child {LXical.Server.Project.Node, "solution_exs"} of Supervisor :"solution_exs::supervisor" failed to start
** (exit) exited in: GenServer.call(:"solution_exs::node_process", {:start, [~c"/root/.config/emacs/language-server/elixir/release/priv", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_common.ez/lx_common/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_elixir_sense.ez/lx_elixir_sense/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_plugin.ez/lx_lexical_plugin/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_shared.ez/lx_lexical_shared/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_lexical_test.ez/lx_lexical_test/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_path_glob.ez/lx_path_glob/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_remote_control.ez/lx_remote_control/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_snowflake.ez/lx_snowflake/ebin", ~c"/root/.config/emacs/language-server/elixir/release/lib/lx_sourceror.ez/lx_sourceror/ebin"]}, 3500)
    ** (EXIT) an exception was raised:
        ** (File.Error) could not set current working directory to "/root/repos/leetcode/solution.exs": not a directory
            (elixir 1.17.1) lib/file.ex:1638: File.cd!/1
            (elixir 1.17.1) lib/file.ex:1662: File.cd!/2
            (lx_remote_control 0.5.0) lib/lexical/remote_control.ex:136: LXical.RemoteControl.elixir_executable/1
            (lx_remote_control 0.5.0) lib/lexical/remote_control/port.ex:25: LXical.RemoteControl.Port.open_elixir/2
            (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:43: LXical.RemoteControl.ProjectNode.State.start/3
            (lx_remote_control 0.5.0) lib/lexical/remote_control/project_node.ex:161: LXical.RemoteControl.ProjectNode.handle_call/3
            (stdlib 4.3) gen_server.erl:1149: :gen_server.try_handle_call/4
            (stdlib 4.3) gen_server.erl:1178: :gen_server.handle_msg/6
Start Call: LXical.Server.Project.Node.start_link(%LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 52582})
Restart: :permanent
Shutdown: 5000
Type: :worker
00:33:18.395 [info] Lexical Initialized
00:33:18.398 [info] opened file:///root/repos/leetcode/solution.exs
00:33:20.123 [info] Child of Supervisor :inet_gethost_native_sup started
Pid: #PID<0.160.0>
Start Call: :inet_gethost_native.init([])
00:33:20.123 [info] Child :inet_gethost_native_sup of Supervisor :kernel_safe_sup started
Pid: #PID<0.159.0>
Start Call: :inet_gethost_native.start_link()
Restart: :temporary
Shutdown: 1000
Type: :worker
00:33:20.125 [error] GenServer LXical.Server terminating
** (stop) {:erpc, :noconnection}
    (kernel 8.5.4) erpc.erl:710: :erpc.call/5
    (lx_server 0.5.0) lib/lexical/server/state.ex:164: LXical.Server.State.apply/2
    (lx_server 0.5.0) lib/lexical/server.ex:154: LXical.Server.apply_to_state/2
    (lx_server 0.5.0) lib/lexical/server.ex:117: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
    (stdlib 4.3) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Last message: {:"$gen_cast", {:protocol_message, %LXical.Protocol.Notifications.DidChange{lsp: %LXical.Protocol.Notifications.DidChange.LSP{jsonrpc: "2.0", method: "textDocument/didChange", content_changes: [#Protocol.Types.TextDocument.ContentChangeEvent.TextDocumentContentChangeEvent<[range: #Protocol.Types.Range<[end: #Protocol.Types.Position<[character: 24, line: 2]>, start: #Protocol.Types.Position<[character: 24, line: 2]>]>, range_length: 0, text: "\n"]>], text_document: #Protocol.Types.TextDocument.Versioned.Identifier<[uri: "file:///root/repos/leetcode/solution.exs", version: 1]>}, document: nil, jsonrpc: "2.0", method: "textDocument/didChange", content_changes: nil, text_document: nil}}}
State: %LXical.Server.State{configuration: %LXical.Server.Configuration{project: %LXical.Project{root_uri: "file:///root/repos/leetcode/solution.exs", mix_exs_uri: nil, mix_project?: false, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 52582}, support: %LXical.Server.Configuration.Support{code_action_dynamic_registration: false, hierarchical_symbols: false, snippet: true, deprecated: true, tags: #Protocol.Types.Completion.ClientCapabilities.TagSupport<[value_set: [:deprecated]]>, signature_help: false, work_done_progress: true}, client_name: "emacs", additional_watched_extensions: nil, dialyzer_enabled?: false}, initialized?: true, shutdown_received?: false, in_flight_requests: %{}}
00:33:20.138 [error] Process LXical.Server (#PID<0.142.0>) terminating
** (ErlangError) Erlang error: {:erpc, :noconnection}
    (kernel 8.5.4) erpc.erl:710: :erpc.call/5
    (lx_server 0.5.0) lib/lexical/server/state.ex:164: LXical.Server.State.apply/2
    (lx_server 0.5.0) lib/lexical/server.ex:154: LXical.Server.apply_to_state/2
    (lx_server 0.5.0) lib/lexical/server.ex:117: LXical.Server.handle_message/2
    (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
    (stdlib 4.3) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Initial Call: LXical.Server.init/1
Ancestors: [LXical.Server.Supervisor, #PID<0.139.0>]
Message Queue Length: 1
Messages: ["$gen_cast": {:protocol_message, %LXical.Protocol.Notifications.DidChange{lsp: %LXical.Protocol.Notifications.DidChange.LSP{jsonrpc: "2.0", method: "textDocument/didChange", content_changes: [#Protocol.Types.TextDocument.ContentChangeEvent.TextDocumentContentChangeEvent<[range: #Protocol.Types.Range<[end: #Protocol.Types.Position<[character: 0, line: 3]>, start: #Protocol.Types.Position<[character: 0, line: 3]>]>, range_length: 0, text: "    "]>], text_document: #Protocol.Types.TextDocument.Versioned.Identifier<[uri: "file:///root/repos/leetcode/solution.exs", version: 2]>}, document: nil, jsonrpc: "2.0", method: "textDocument/didChange", content_changes: nil, text_document: nil}}]
Links: [#PID<0.140.0>]
Dictionary: [rand_seed: {%{bits: 58, jump: #Function<3.34006561/1 in :rand.exsplus_jump>, next: #Function<0.34006561/1 in :rand.exsss_next>, type: :exsss, uniform: #Function<1.34006561/1 in :rand.exsss_uniform>, uniform_n: #Function<2.34006561/2 in :rand.exsss_uniform>}, [229465285801372954 | 165608497271492339]}]
Trapping Exits: false
Status: :running
Heap Size: 4185
Stack Size: 28
Reductions: 23584
00:33:20.140 [error] Child LXical.Server of Supervisor LXical.Server.Supervisor terminated
** (exit) an exception was raised:
    ** (ErlangError) Erlang error: {:erpc, :noconnection}
        (kernel 8.5.4) erpc.erl:710: :erpc.call/5
        (lx_server 0.5.0) lib/lexical/server/state.ex:164: LXical.Server.State.apply/2
        (lx_server 0.5.0) lib/lexical/server.ex:154: LXical.Server.apply_to_state/2
        (lx_server 0.5.0) lib/lexical/server.ex:117: LXical.Server.handle_message/2
        (lx_server 0.5.0) lib/lexical/server.ex:59: LXical.Server.handle_cast/2
        (stdlib 4.3) gen_server.erl:1123: :gen_server.try_dispatch/4
        (stdlib 4.3) gen_server.erl:1200: :gen_server.handle_msg/6
        (stdlib 4.3) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Pid: #PID<0.142.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
00:33:20.140 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.163.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
00:33:20.237 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 52605, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 4, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 52605, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:20.924 [error] Received textDocument/didChange before server was initialized
00:33:20.925 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:20.925 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:21.026 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 36504, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 5, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 36504, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:21.094 [error] Received textDocument/didChange before server was initialized
00:33:21.095 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:21.095 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:21.199 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 34058, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 6, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 34058, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:21.251 [error] Received textDocument/didChange before server was initialized
00:33:21.252 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:21.252 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:21.356 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 30351, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 7, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 30351, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:21.711 [error] Received textDocument/didChange before server was initialized
00:33:21.713 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:21.713 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:21.713 [error] Received textDocument/didChange before server was initialized
00:33:21.714 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:21.714 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:21.818 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 14896, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 13, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 14896, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:22.187 [error] Received textDocument/didChange before server was initialized
00:33:22.189 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:22.189 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:22.292 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 21275, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 14, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 21275, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:22.354 [error] Received textDocument/didChange before server was initialized
00:33:22.356 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:22.356 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:22.447 [error] Received textDocument/didChange before server was initialized
00:33:22.450 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:22.450 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:22.534 [error] Received textDocument/didChange before server was initialized
00:33:22.536 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:22.536 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:22.621 [error] Received textDocument/didChange before server was initialized
00:33:22.623 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:22.623 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:22.725 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 15562, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 18, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 15562, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:22.911 [error] Received textDocument/didChange before server was initialized
00:33:22.913 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:22.913 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:23.015 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 41767, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 19, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 41767, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:23.194 [error] Received textDocument/didChange before server was initialized
00:33:23.196 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:23.196 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:23.287 [error] Received textDocument/didChange before server was initialized
00:33:23.289 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:23.289 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:23.391 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 19632, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 21, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 19632, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:23.645 [error] Received textDocument/didChange before server was initialized
00:33:23.648 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:23.648 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:23.648 [error] Received textDocument/didChange before server was initialized
00:33:23.650 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:23.650 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:23.751 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 58515, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 25, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 58515, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:24.308 [error] Received textDocument/didChange before server was initialized
00:33:24.310 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:24.310 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:24.411 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 36189, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 24, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 36189, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:24.707 [error] Received textDocument/didChange before server was initialized
00:33:24.709 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:24.709 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:24.734 [error] Received textDocument/didChange before server was initialized
00:33:24.736 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:24.736 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:24.758 [error] Received textDocument/didChange before server was initialized
00:33:24.759 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:24.759 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:24.784 [error] Received textDocument/didChange before server was initialized
00:33:24.784 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:24.784 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:24.809 [error] Received textDocument/didChange before server was initialized
00:33:24.811 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:24.811 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:24.834 [error] Received textDocument/didChange before server was initialized
00:33:24.835 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:24.835 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:24.859 [error] Received textDocument/didChange before server was initialized
00:33:24.861 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:24.861 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:24.884 [error] Received textDocument/didChange before server was initialized
00:33:24.886 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:24.886 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:24.909 [error] Received textDocument/didChange before server was initialized
00:33:24.910 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:24.910 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:24.934 [error] Received textDocument/didChange before server was initialized
00:33:24.936 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:24.936 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:24.959 [error] Received textDocument/didChange before server was initialized
00:33:24.960 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:24.960 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:24.984 [error] Received textDocument/didChange before server was initialized
00:33:24.986 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:24.986 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:25.009 [error] Received textDocument/didChange before server was initialized
00:33:25.011 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:25.011 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:25.034 [error] Received textDocument/didChange before server was initialized
00:33:25.036 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:25.036 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:25.060 [error] Received textDocument/didChange before server was initialized
00:33:25.062 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:25.062 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:25.084 [error] Received textDocument/didChange before server was initialized
00:33:25.085 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:25.085 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:25.110 [error] Received textDocument/didChange before server was initialized
00:33:25.112 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:25.112 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:25.135 [error] Received textDocument/didChange before server was initialized
00:33:25.137 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:25.137 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:25.239 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 22529, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 6, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 22529, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:25.292 [error] Received textDocument/didChange before server was initialized
00:33:25.294 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:25.294 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:25.397 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 42697, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 5, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 42697, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:25.492 [error] Received textDocument/didChange before server was initialized
00:33:25.493 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:25.493 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:25.597 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 12722, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 4, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 12722, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:28.440 [error] Received textDocument/didChange before server was initialized
00:33:28.442 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:28.442 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:28.544 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 58546, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 4, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 58546, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:29.606 [error] Received textDocument/didChange before server was initialized
00:33:29.608 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:29.608 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:29.710 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 58549, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 4, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 58549, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:30.488 [error] Received textDocument/didChange before server was initialized
00:33:30.491 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:30.491 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:30.592 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 12841, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 5, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 12841, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:30.948 [error] Received textDocument/didChange before server was initialized
00:33:30.951 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:30.951 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:31.029 [error] Received textDocument/didChange before server was initialized
00:33:31.031 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:31.031 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:31.133 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 29130, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 7, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 29130, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:31.148 [error] Received textDocument/didChange before server was initialized
00:33:31.150 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:31.150 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:31.251 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 44298, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 8, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 44298, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:31.367 [error] Received textDocument/didChange before server was initialized
00:33:31.369 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:31.369 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:31.472 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 21641, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 7, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 21641, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:31.542 [error] Received textDocument/didChange before server was initialized
00:33:31.543 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:31.543 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:31.647 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 60755, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 6, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 60755, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:31.713 [error] Received textDocument/didChange before server was initialized
00:33:31.716 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:31.716 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:31.818 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 11134, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 5, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 11134, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:31.871 [error] Received textDocument/didChange before server was initialized
00:33:31.873 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:31.873 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:31.974 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 37632, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 4, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 37632, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:32.214 [error] Received textDocument/didChange before server was initialized
00:33:32.216 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:32.216 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:32.319 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 24399, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 5, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 24399, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:32.476 [error] Received textDocument/didChange before server was initialized
00:33:32.478 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:32.478 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:32.581 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 45585, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 6, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 45585, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:32.755 [error] Received textDocument/didChange before server was initialized
00:33:32.757 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:32.757 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:32.860 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 41702, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_character: ".", trigger_kind: :trigger_character]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 7, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 41702, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_character: ".", trigger_kind: :trigger_character]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:39.461 [error] Received textDocument/didChange before server was initialized
00:33:39.464 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:39.464 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:39.464 [error] Received textDocument/didChange before server was initialized
00:33:39.466 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:39.466 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:39.568 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 41871, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 4, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<5, 5>>, id: 41871, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:39.951 [error] Received textDocument/didChange before server was initialized
00:33:39.954 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:39.954 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:40.056 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 9908, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 3, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<5, 4>>, id: 9908, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:40.309 [error] Received textDocument/didChange before server was initialized
00:33:40.311 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:40.311 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:40.379 [error] Received textDocument/didChange before server was initialized
00:33:40.380 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:40.381 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:40.477 [error] Received textDocument/didChange before server was initialized
00:33:40.479 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:40.479 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:40.581 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 63590, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 6, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<5, 6>>, id: 63590, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:43.641 [error] Received textDocument/didChange before server was initialized
00:33:43.644 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:43.644 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:43.743 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 64143, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 6, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 64143, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:43.997 [error] Received textDocument/didChange before server was initialized
00:33:43.999 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:43.999 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:44.102 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 24378, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 6, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 24378, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:45.410 [error] Received textDocument/didChange before server was initialized
00:33:45.412 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:45.412 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:45.514 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 24334, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 7, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 24334, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:45.599 [error] Received textDocument/didChange before server was initialized
00:33:45.601 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:45.601 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:45.601 [error] Received textDocument/didChange before server was initialized
00:33:45.603 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:45.603 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:45.705 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 59660, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 2, line: 4]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<5, 3>>, id: 59660, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:48.085 [error] Received textDocument/didChange before server was initialized
00:33:48.088 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:48.088 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:48.189 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 53916, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 2, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 53916, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:48.401 [error] Received textDocument/didChange before server was initialized
00:33:48.403 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:48.403 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:48.505 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 6524, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 2, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 6524, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:52.504 [error] Received textDocument/didChange before server was initialized
00:33:52.506 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:52.506 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:52.607 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 10199, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 4, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 10199, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:52.700 [error] Received textDocument/didChange before server was initialized
00:33:52.702 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:52.702 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:52.804 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 40695, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 3, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 40695, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:52.999 [error] Received textDocument/didChange before server was initialized
00:33:53.001 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:53.001 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:53.104 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 32017, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 2, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 32017, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:54.025 [error] Received textDocument/didChange before server was initialized
00:33:54.026 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidChange, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:54.026 [error] Could not handle message LXical.Protocol.Notifications.DidChange :ok
00:33:54.130 [error] ** (FunctionClauseError) no function clause matching in LXical.Server.Provider.Handlers.Completion.handle/2
    (lx_server 0.5.0) lib/lexical/server/provider/handlers/completion.ex:13: LXical.Server.Provider.Handlers.Completion.handle(%LXical.Protocol.Requests.Completion{lsp: %LXical.Protocol.Requests.Completion.LSP{id: 60812, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, position: #Protocol.Types.Position<[character: 2, line: 3]>, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, document: #LXical.Document<path: "/root/repos/leetcode/solution.exs", version: 1, dirty?: true, lines: %Lines<"defmodule Haha do..."(8 lines)>, ...>, position: LxPos<<4, 1>>, id: 60812, jsonrpc: "2.0", method: "textDocument/completion", context: #Protocol.Types.Completion.Context<[trigger_kind: :invoked]>, partial_result_token: nil, text_document: #Protocol.Types.TextDocument.Identifier<[uri: "file:///root/repos/leetcode/solution.exs"]>, work_done_token: nil}, nil)
    (lx_server 0.5.0) lib/lexical/server/task_queue.ex:77: anonymous fn/4 in LXical.Server.TaskQueue.State.as_task/2
    (elixir 1.17.1) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.17.1) lib/task/supervised.ex:36: Task.Supervised.reply/4

00:33:57.064 [error] Received textDocument/didSave before server was initialized
00:33:57.066 [error] Failed to handle Elixir.LXical.Protocol.Notifications.DidSave, {{:error, :not_initialized}, %LXical.Server.State{configuration: nil, initialized?: false, shutdown_received?: false, in_flight_requests: %{}}}
00:33:57.066 [error] Could not handle message LXical.Protocol.Notifications.DidSave :ok
